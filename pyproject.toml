[tool.poetry]
name = "docflow"
version = "0.1.0"
description = "数据处理服务"
authors = ["ppolxda"]

[tool.poetry.dependencies]
python = ">=3.9.12,<3.10"
fastapi = "^0.94.1"
alembic = "^1.8.1"
minio = "^7.1.12"
filetype = "^1.2.0"
pydantic = { extras = ["dotenv"], version = "^1.10.7" }
aiohttp = "^3.8.3"
python-multipart = "^0.0.6"
pyhumps = "^3.8.0"
pymupdf = "^1.21.1"
pdfplumber = "^0.7.5"
pikepdf = "^6.2.2"
psycopg2-binary = "^2.9.5"
opencv-python = "^4.6.0"
uvicorn = "^0.19.0"
fastapi-login = "^1.9.0"
sqlalchemy = "^2.0.9"
aio-pika = "^9.0.5"
boto3 = ">=1.24.59,<1.26.119"
aioboto3 = "^11.1.0"
numpy = "<1.24.0"
conductor-python = "^1.0.64"
elasticsearch6 = "^6.8.2"
httpx = "^0.23.3"
pdf2image = "^1.16.3"
ghostscript = "^0.7"
openpyxl = "^3.1.2"
pandas = "^1.5.3"

[tool.poetry.group.dev.dependencies]
pydbgen = { git = "https://github.com/ppolxda/pydbgen", rev = "devel-rest" }
protobuf = "<=3.20.3"
pylint = "^2.15.5"
pytest = "^7.2.2"
black = { extras = ["jupyter"], version = "^23.3.0" }
flake8 = "^6.0.0"
bandit = "^1.7.5"
pep8-naming = "^0.13.3"
isort = "^5.12.0"
autoflake = "^2.0.2"
pytest-asyncio = "^0.21.0"
flake8-docstrings = "^1.7.0"
pre-commit = "^3.2.2"
pyright = "^1.1.302"
pre-commit-hooks = "^4.4.0"
types-aioboto3 = { extras = ["essential"], version = "^11.1.0" }
ipykernel = "^6.21.0"
pydocstyle = "^6.3.0"


[tool.poetry.group.predict.dependencies]
transformers = "^4.25.1"
mlflow-skinny = "^2.1.1"
ultralytics = "^8.0.87"
timm = "^0.9.2"
scipy = "^1.11.2"

[tool.poetry.group.cpu.dependencies]
torch = "1.12.1"
accelerate = "^0.20.3"

# [[tool.poetry.source]]
# name = "aliyun"
# url = "http://192.168.186.125:8081/repository/aliyun-pypi/simple"
# priority = "default"

[tool.pyright]
exclude = ["**/node_modules", "**/__pycache__", "**/migration", "mdbs", ".venv"]
typeCheckingMode = "basic"
reportMissingImports = true
reportMissingTypeStubs = false

# pythonVersion = "3.8.10"
[tool.isort]
profile = "black"
line_length = 88
atomic = true
force_single_line = true
# include_trailing_comma = true
# lines_after_imports = 2
# lines_between_types = 1
# use_parentheses = true
src_paths = ["docflow", "docker"]
# skip_glob = ["*/setup.py"]
filter_files = true

[build-system]
requires = ["poetry>=1.2"]
build-backend = "poetry.masonry.api"

[tool.poetry.scripts]
# 代码生成
gen = "ps:gen_code"
# 代码检查
check = "ps:check_code"
# 本地测试环境退级
down_test = "ps:downgrade_test"
# 本地环境退级
down = "ps:downgrade"
# 本地环境升级
up_test = "ps:upgrade_test"
# 本地环境退级
up = "ps:upgrade"
