repos:
    # 代码静态检查 - 检查问题代码
    - repo: local
      hooks:
          # pyproject.toml 检查
          - id: poetry-check
            name: poetry-check
            language: system
            pass_filenames: false
            entry: poetry check
            files: ^(pyproject.toml|poetry.lock)$

          # 自动基于poetry导出 requirements.txt
          - id: poetry-export
            name: poetry-export
            language: system
            pass_filenames: false
            entry: poetry export -f requirements.txt -o requirements.txt --without-hashes
            files: ^(pyproject.toml|poetry.lock)$

          # 代码格式化工具 - 规范代码
          - id: black
            name: black
            entry: black
            language: python
            types: [python]
            exclude: |
                (?x)(
                ^mdbs/.*
                | migration/versions/.*
                )

          # 移除未使用的声明
          - id: autoflake
            name: autoflake
            entry: autoflake
            language: python
            types: [python]
            args:
                [
                    "--in-place",
                    "--remove-unused-variable",
                    "--remove-all-unused-imports",
                ]

          # 代码静态检查 - 规范代码
          - id: flake8
            name: flake8
            entry: flake8
            language: python
            types: [python]
            additional_dependencies:
                - "pep8-naming"
                - "flake8-docstrings"
            exclude: |
                (?x)(
                ^mdbs/.*
                | migration/versions/.*
                | .*\.lock$
                )

          # 代码格式化工具 - import 格式化
          - id: isort
            name: isort
            entry: isort
            language: python
            types: [python]
            additional_dependencies: ["toml"]
            exclude: |
                (?x)(
                ^mdbs/.*
                | migration/versions/.*
                )
          # 代码文档检查 - 文档规范
          - id: pydocstyle
            name: pydocstyle
            entry: pydocstyle
            language: python
            types: [python]
            exclude: |
                (?x)(
                ^mdbs/.*
                | migration/versions/.*
                | .*\.lock$
                )

          # 代码静态检查 - 检查问题代码
          - id: pyright
            name: pyright
            entry: pyright
            language: node
            pass_filenames: false
            types: [python]
            additional_dependencies: ["pyright@1.1.302"]

          # 检查是否由大文件,大文件使用lfs
          - id: check-added-large-files
            name: check-added-large-files
            entry: check-added-large-files
            language: python
            types: [python]
            args: ["--maxkb=500"]

          # 检查 yaml 文件
          - id: check-yaml
            name: check-yaml
            entry: check-yaml
            language: python
            types: [python]
            files: \.(yml|ymal)$

          # 检查 toml 文件
          - id: check-toml
            name: check-toml
            entry: check-toml
            language: python
            types: [python]
            files: \.(yml|ymal)$

          # 检查 yaml 文件
          - id: trailing-whitespace-fixer
            name: trailing-whitespace-fixer
            entry: trailing-whitespace-fixer
            language: node
            types: [python]
            exclude: |
                (?x)(
                  ^depends//.*
                  | ^tests/.*/fixtures/.*
                  | ^.vscode/.*
                  | .*\.md$
                  | .*\.lock$
                )
          - id: end-of-file-fixer
            name: end-of-file-fixer
            entry: end-of-file-fixer
            language: python
            types: [python]
            exclude: |
                (?x)(
                  ^depends//.*
                  | ^tests/.*/fixtures/.*
                  | ^.vscode/.*
                  | .*\.md$
                )
          - id: fix-encoding-pragma
            name: fix-encoding-pragma
            entry: fix-encoding-pragma
            language: python
            types: [python]
          #   - id: requirements-txt-fixer
          - id: debug-statement-hook
            name: debug-statement-hook
            entry: debug-statement-hook
            language: python
            types: [python]
          - id: check-docstring-first
            name: check-docstring-first
            entry: check-docstring-first
            language: python
            types: [python]
          #   - id: name-tests-test
          #     name: name-tests-test
          #     entry: name-tests-test
          #     language: python
          #     types: [python]
          #     args: ["--pytest-test-first"]
          - id: mixed-line-ending
            name: mixed-line-ending
            entry: mixed-line-ending
            language: python
            types: [python]
            args: ["--fix=lf"]
            exclude: |
                (?x)(
                  .*\.bat$
                )
          # - id: double-quote-string-fixer
